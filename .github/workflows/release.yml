name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string
permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Lint
        run: bun run lint --fix

      - name: Run tests
        run: bun test --coverage

      - name: Set version
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "PREVIOUS_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Update package version
        run: |
          # Direct modification of package.json
          jq ".version = \"$VERSION\"" package.json > temp.json && mv temp.json package.json

      - name: Generate Release Notes
        id: release_notes
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('./.github/scripts/generate-release-notes.js')
            const notes = await script({github, context})
            core.setOutput('notes', notes)

      - name: Build
        run: bun run build

      - name: Commit version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump version to $VERSION [skip ci]"
          git tag v$VERSION
          git push && git push --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: ${{ steps.release_notes.outputs.notes }}
          draft: false
          prerelease: false

      - name: Publish to NPM
        run: bun publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
